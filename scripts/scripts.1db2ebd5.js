"use strict";angular.module("angularJsApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngMaterial","ngDynamicFilter","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("angularJsApp").controller("MainCtrl",["$scope","$q","$timeout",function(a,b,c){function d(a){var b=angular.lowercase(a);return function(a){return 0===a.name.toLowerCase().indexOf(b)}}a.onFilter=function(b){a.result=b},a.dataSource=[{position:1,name:"Hydrogen",weight:1.0079,symbol:"H"},{position:2,name:"Helium",weight:4.0026,symbol:"He"},{position:3,name:"Lithium",weight:6.941,symbol:"Li"},{position:4,name:"Beryllium",weight:9.0122,symbol:"Be"},{position:5,name:"Boron",weight:10.811,symbol:"B"},{position:6,name:"Carbon",weight:12.0107,symbol:"C"},{position:7,name:"Nitrogen",weight:14.0067,symbol:"N"},{position:8,name:"Oxygen",weight:15.9994,symbol:"O"},{position:9,name:"Fluorine",weight:18.9984,symbol:"F"},{position:10,name:"Neon",weight:20.1797,symbol:"Ne"},{position:11,name:"Sodium",weight:22.9897,symbol:"Na"},{position:12,name:"Magnesium",weight:24.305,symbol:"Mg"},{position:13,name:"Aluminum",weight:26.9815,symbol:"Al"},{position:14,name:"Silicon",weight:28.0855,symbol:"Si"},{position:15,name:"Phosphorus",weight:30.9738,symbol:"P"},{position:16,name:"Sulfur",weight:32.065,symbol:"S"},{position:17,name:"Chlorine",weight:35.453,symbol:"Cl"},{position:18,name:"Argon",weight:39.948,symbol:"Ar"},{position:19,name:"Potassium",weight:39.0983,symbol:"K"},{position:20,name:"Calcium",weight:40.078,symbol:"Ca"}],a.querySearch=function(e){var f,g=e?a.dataSource.filter(d(e)):a.dataSource;return f=b.defer(),c(function(){f.resolve(g.map(function(a){return a.name}))},1e3*Math.random(),!1),f.promise},a.filterOptions=[{type:"OPTIONS",label:"Symbol",field:"symbol",options:a.dataSource.map(function(a){return a.symbol})},{type:"TEXT",label:"Weight",field:"weight"},{type:"AUTOCOMPLETE",label:"Material",field:"name",querySearch:a.querySearch}],a.filterConfig={saveState:!0}}]),angular.module("angularJsApp").filter("search",function(){return function(a,b){return b&&0!=b.length?a.filter(function(a){function c(b){var c=Object.keys(b)[0];return b[c][0]&&a[c]?b[c].some(function(b){return!(-1===a[c].toString().toLowerCase().indexOf(b.toLowerCase()||""))}):!1}return b.some(c)}):a}}),angular.module("angularJsApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("angularJsApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/dynamicFilter/ngDynamicFilterMaterial.html",'<div> <div ng-repeat="filter in filters" layout="row" class="layout-row"> <md-input-container style="width: 18%"> <md-select ng-model="filter.option" placeholder="Select option" ng-change="filter.onSelect(filter.option)" flex="auto"> <md-option ng-hide="filters.isFilterSelected(o)" ng-value="o" ng-repeat="o in options">{{ o.label }}</md-option> </md-select> </md-input-container> <span ng-repeat="value in filter.values track by $index" style="margin-left: 10px;width:18%"> <md-input-container style="width: 100%" ng-if="!filter.isAutocomplete()"> <md-select ng-model="filter.values[$index]" ng-change="filter.callback()" placeholder="Select value" ng-if="filter.isOptions()"> <md-option ng-hide="filters.isValueSelected(o)" ng-value="o" ng-repeat="o in filter.option.options">{{ o }}</md-option> </md-select> <input type="text" ng-model="filter.values[$index]" ng-if="filter.isText()" ng-model-onblur ng-change="filter.callback()"> </md-input-container> <md-autocomplete placeholder="Search..." style="display: inline-block;margin-top: 8px;width: 100%" ng-if="filter.isAutocomplete()" md-search-text="searchText" md-selected-item="filter.values[$index]" md-selected-item-change="filter.callback()" md-items="item in filter.option.querySearch(searchText)" md-item-text="item" md-min-length="0"> <md-item-template> <span md-highlight-text="ctrl.searchText" md-highlight-flags="^i">{{item}}</span> </md-item-template> </md-autocomplete> </span> <md-input-container style="margin-top: 2px"> <md-button ng-show="filter.canAddValue()" ng-click="filter.addValue()" class="md-fab md-primary" style="height: 20px;width: 37px"> <md-icon class="fa fa-plus" style="vertical-align: bottom;line-height: 25px"></md-icon> </md-button> </md-input-container> </div> <md-input-container style="margin: 0 0 20px 0"> <md-button ng-click="filters.add()" class="md-raised md-primary">Add Filter</md-button> <md-button ng-click="filters.removeLast()" class="md-raised">Remove Filter</md-button> </md-input-container> </div>'),a.put("views/main.html",'<md-content class="md-padding"> <div class="links-section"> <a ng-click="showConfig =! showConfig">Show Config</a> <a target="_blank" href="https://github.com/ivanblazevic/dynamic-filter#api">API Docs</a> </div> <pre style="border: 1px solid #e4e4e4" class="prettyprint" ng-class="{ show: showConfig, hidden: !showConfig }">$scope.filterOptions = [\n{\n    type: "OPTIONS",\n    label: "Material",\n    field: "material",\n    options: $scope.dataSource.map(function(m) { return m.name }) // map object array to string\n},\n{\n    type: "TEXT",\n    label: "Symbol",\n    field: "symbol"\n},\n{\n    type: "AUTOCOMPLETE",\n    label: "Material Search",\n    field: "material",\n    params: {\n        querySearch: $scope.querySearch // if autocomplete, pass function which returns promise\n    }\n}\n]</pre> <dynamic-filter template-url="views/dynamicFilter/ngDynamicFilterMaterial.html" config="filterConfig" options="filterOptions" on-select="onFilter(result)"> </dynamic-filter> <pre style="border: 1px solid #e4e4e4" class="prettyprint">JSON output: {{ result }}</pre> <table class="mdl-data-table mdl-js-data-table mdl-data-table--selectable mdl-shadow--2dp" style="width:100%"> <thead> <tr> <th width="20">Position</th> <th class="mdl-data-table__cell--non-numeric">Material</th> <th>Weight</th> <th>Symbol</th> </tr> </thead> <tbody> <tr ng-repeat="item in dataSource | search:result"> <td>{{ item.position }}</td> <td class="mdl-data-table__cell--non-numeric">{{ item.name }}</td> <td>{{ item.weight }}</td> <td>{{ item.symbol }}</td> </tr> </tbody> </table> </md-content>')}]);